From b9c50d37148b538ed5fa7842e8c190593fbb4a98 Mon Sep 17 00:00:00 2001
From: Hannes Winkler <hanneswinkler2000@web.de>
Date: Thu, 9 Nov 2023 15:04:30 +0100
Subject: [PATCH 3/4] support cross-building linux engine from macos

build/config/BUILDCONFIG.gn:
Use mac toolchain when building for linux

build/toolchain/linux/install-sysroot.py:
Allow downloading linux sysroots on mac

build/toolchain/linux/BUILD.gn:
Use //buildtools/mac-x64/clang... when running on mac
---
 build/config/BUILDCONFIG.gn                    | 14 +++++++++-----
 build/linux/sysroot_scripts/install-sysroot.py |  2 +-
 build/toolchain/linux/BUILD.gn                 | 14 +++++++++-----
 3 files changed, 19 insertions(+), 11 deletions(-)

diff --git a/build/config/BUILDCONFIG.gn b/build/config/BUILDCONFIG.gn
index b74b2e2..b54e515 100644
--- a/build/config/BUILDCONFIG.gn
+++ b/build/config/BUILDCONFIG.gn
@@ -552,16 +552,20 @@ if (custom_toolchain != "") {
     set_default_toolchain("//build/toolchain/android:$current_cpu")
   }
 } else if (is_linux) {
+  if (host_os == "linux") {
+    if (is_clang) {
+      host_toolchain = "//build/toolchain/linux:clang_$host_cpu"
+    } else {
+      host_toolchain = "//build/toolchain/linux:$host_cpu"
+    }
+  } else if (host_os == "mac") {
+    host_toolchain = "//build/toolchain/mac:clang_$host_cpu"
+  }
   if (is_clang) {
-    host_toolchain = "//build/toolchain/linux:clang_$host_cpu"
     set_default_toolchain("//build/toolchain/linux:clang_$current_cpu")
   } else {
-    host_toolchain = "//build/toolchain/linux:$host_cpu"
     set_default_toolchain("//build/toolchain/linux:$current_cpu")
   }
-  if (is_chromeos && cros_use_custom_toolchain) {
-    set_default_toolchain("//build/toolchain/cros:target")
-  }
 } else if (is_mac) {
   host_toolchain = "//build/toolchain/mac:clang_$host_cpu"
   set_default_toolchain("//build/toolchain/mac:clang_$current_cpu")
diff --git a/build/linux/sysroot_scripts/install-sysroot.py b/build/linux/sysroot_scripts/install-sysroot.py
index d3e7664..6dfbe42 100755
--- a/build/linux/sysroot_scripts/install-sysroot.py
+++ b/build/linux/sysroot_scripts/install-sysroot.py
@@ -77,7 +77,7 @@ def main(args):
   parser.add_option('--print-hash',
                     help='Print the hash of the sysroot for the given arch.')
   options, _ = parser.parse_args(args)
-  if not sys.platform.startswith('linux'):
+  if not (sys.platform.startswith('linux') or sys.platform.startswith('darwin')):
     return 0
 
   if options.print_hash:
diff --git a/build/toolchain/linux/BUILD.gn b/build/toolchain/linux/BUILD.gn
index 3d603a0..9995952 100644
--- a/build/toolchain/linux/BUILD.gn
+++ b/build/toolchain/linux/BUILD.gn
@@ -33,14 +33,18 @@ if (use_rbe) {
   link_prefix = ""
 }
 
-if (host_cpu == "arm64") {
-  rebased_clang_dir =
-      rebase_path("$buildtools_path/linux-arm64/clang/bin", root_build_dir)
+if (host_os == "linux" && host_cpu == "x64") {
+  host_dir = "linux-x64"
+} else if (host_os == "linux" && host_cpu == "arm64") {
+  host_dir = "linux-arm64"
+} else if (host_os == "mac" && host_cpu == "x64") {
+  host_dir = "mac-x64"
 } else {
-  rebased_clang_dir =
-      rebase_path("$buildtools_path/linux-x64/clang/bin", root_build_dir)
+  assert(false, "Unsupported host OS & CPU combination: $host_os, $host_cpu")
 }
 
+rebased_clang_dir = rebase_path("$buildtools_path/$host_dir/clang/bin", root_build_dir)
+
 gcc_toolchain("arm") {
   prefix = "arm-linux-gnueabihf-"
   if (toolchain_prefix != "") {
-- 
2.43.0

