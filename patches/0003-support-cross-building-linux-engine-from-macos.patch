From 7678b80b17257c393928c95e3836a29ddc057e15 Mon Sep 17 00:00:00 2001
From: Hannes Winkler <hanneswinkler2000@web.de>
Date: Thu, 9 Nov 2023 15:04:30 +0100
Subject: [PATCH 3/5] support cross-building linux engine from macos

engine/src/build/config/BUILDCONFIG.gn:
Use mac toolchain when building for linux

engine/src/build/toolchain/linux/install-sysroot.py:
Allow downloading linux sysroots on mac

engine/src/build/toolchain/linux/BUILD.gn:
Use //buildtools/mac-x64/clang... when running on mac

gn: make linux arm64 build not be auto-detected as a host build
linux embedder: always depend on `libflutter_linux_gtk.so` instead of
`libflutter_${host_os}_gtk.so`
---
 engine/src/build/config/BUILDCONFIG.gn             | 14 +++++++++-----
 .../build/linux/sysroot_scripts/install-sysroot.py |  2 +-
 engine/src/build/toolchain/linux/BUILD.gn          | 14 +++++++++-----
 engine/src/flutter/shell/platform/linux/BUILD.gn   |  4 ++--
 engine/src/flutter/tools/gn                        |  6 +++---
 5 files changed, 24 insertions(+), 16 deletions(-)

diff --git a/engine/src/build/config/BUILDCONFIG.gn b/engine/src/build/config/BUILDCONFIG.gn
index b74b2e2373..b54e51596e 100644
--- a/engine/src/build/config/BUILDCONFIG.gn
+++ b/engine/src/build/config/BUILDCONFIG.gn
@@ -552,16 +552,20 @@ if (custom_toolchain != "") {
     set_default_toolchain("//build/toolchain/android:$current_cpu")
   }
 } else if (is_linux) {
+  if (host_os == "linux") {
+    if (is_clang) {
+      host_toolchain = "//build/toolchain/linux:clang_$host_cpu"
+    } else {
+      host_toolchain = "//build/toolchain/linux:$host_cpu"
+    }
+  } else if (host_os == "mac") {
+    host_toolchain = "//build/toolchain/mac:clang_$host_cpu"
+  }
   if (is_clang) {
-    host_toolchain = "//build/toolchain/linux:clang_$host_cpu"
     set_default_toolchain("//build/toolchain/linux:clang_$current_cpu")
   } else {
-    host_toolchain = "//build/toolchain/linux:$host_cpu"
     set_default_toolchain("//build/toolchain/linux:$current_cpu")
   }
-  if (is_chromeos && cros_use_custom_toolchain) {
-    set_default_toolchain("//build/toolchain/cros:target")
-  }
 } else if (is_mac) {
   host_toolchain = "//build/toolchain/mac:clang_$host_cpu"
   set_default_toolchain("//build/toolchain/mac:clang_$current_cpu")
diff --git a/engine/src/build/linux/sysroot_scripts/install-sysroot.py b/engine/src/build/linux/sysroot_scripts/install-sysroot.py
index d3e76649e6..6dfbe4263d 100755
--- a/engine/src/build/linux/sysroot_scripts/install-sysroot.py
+++ b/engine/src/build/linux/sysroot_scripts/install-sysroot.py
@@ -77,7 +77,7 @@ def main(args):
   parser.add_option('--print-hash',
                     help='Print the hash of the sysroot for the given arch.')
   options, _ = parser.parse_args(args)
-  if not sys.platform.startswith('linux'):
+  if not (sys.platform.startswith('linux') or sys.platform.startswith('darwin')):
     return 0
 
   if options.print_hash:
diff --git a/engine/src/build/toolchain/linux/BUILD.gn b/engine/src/build/toolchain/linux/BUILD.gn
index 3d603a0bc2..9995952143 100644
--- a/engine/src/build/toolchain/linux/BUILD.gn
+++ b/engine/src/build/toolchain/linux/BUILD.gn
@@ -33,14 +33,18 @@ if (use_rbe) {
   link_prefix = ""
 }
 
-if (host_cpu == "arm64") {
-  rebased_clang_dir =
-      rebase_path("$buildtools_path/linux-arm64/clang/bin", root_build_dir)
+if (host_os == "linux" && host_cpu == "x64") {
+  host_dir = "linux-x64"
+} else if (host_os == "linux" && host_cpu == "arm64") {
+  host_dir = "linux-arm64"
+} else if (host_os == "mac" && host_cpu == "x64") {
+  host_dir = "mac-x64"
 } else {
-  rebased_clang_dir =
-      rebase_path("$buildtools_path/linux-x64/clang/bin", root_build_dir)
+  assert(false, "Unsupported host OS & CPU combination: $host_os, $host_cpu")
 }
 
+rebased_clang_dir = rebase_path("$buildtools_path/$host_dir/clang/bin", root_build_dir)
+
 gcc_toolchain("arm") {
   prefix = "arm-linux-gnueabihf-"
   if (toolchain_prefix != "") {
diff --git a/engine/src/flutter/shell/platform/linux/BUILD.gn b/engine/src/flutter/shell/platform/linux/BUILD.gn
index ba44674089..520659a3c4 100644
--- a/engine/src/flutter/shell/platform/linux/BUILD.gn
+++ b/engine/src/flutter/shell/platform/linux/BUILD.gn
@@ -331,8 +331,8 @@ zip_bundle("flutter_gtk") {
   }
   tmp_files += [
     {
-      source = "$root_build_dir/libflutter_${host_os}_gtk.so"
-      destination = "libflutter_${host_os}_gtk.so"
+      source = "$root_build_dir/libflutter_linux_gtk.so"
+      destination = "libflutter_linux_gtk.so"
     },
     {
       source = "$root_build_dir/gen_snapshot"
diff --git a/engine/src/flutter/tools/gn b/engine/src/flutter/tools/gn
index 325b5cbece..51173f3a3d 100755
--- a/engine/src/flutter/tools/gn
+++ b/engine/src/flutter/tools/gn
@@ -94,8 +94,8 @@ def is_host_build(args):
     return True
   # For linux arm64 builds, we cross compile from x64 hosts, so the
   # target_os='linux' and linux-cpu='arm64'
-  if args.target_os == 'linux' and args.linux_cpu == 'arm64':
-    return True
+  # if args.target_os == 'linux' and args.linux_cpu == 'arm64':
+  #   return True
   # The Mac and host targets are redundant. Again, necessary to disambiguate
   # during cross-compilation.
   if args.target_os == 'mac':
@@ -599,7 +599,7 @@ def to_gn_args(args):
   else:
     gn_args['skia_use_gl'] = args.target_os != 'fuchsia'
 
-  if sys.platform == 'darwin' and args.target_os not in ['android', 'fuchsia']:
+  if sys.platform == 'darwin' and args.target_os not in ['android', 'fuchsia', 'linux']:
     # OpenGL is deprecated on macOS > 10.11.
     # This is not necessarily needed but enabling this until we have a way to
     # build a macOS metal only shell and a gl only shell.
-- 
2.47.1

